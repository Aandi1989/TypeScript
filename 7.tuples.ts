/*Иногда у нас может возникнуть необходимость хранить массив значений различных типов. TypeScript предоставляет нам такой тип данных,
называемый кортеж (англ. tuple). Кортеж представляет собой массив, каждый элемент которого имеет свой жестко заданный тип. 
Для примера сделаем кортеж, в котором мы будем хранить имя и возраст юзера. В первом элементе кортежа у нас будет имя и оно будет являться строкой, 
а во втором элементе у нас будет возраст и он будет являться числом.*/ 
let user: [string, number];

/*При объявлении кортежа можно заполнять его данными*/
let user2: [string, number] = ['Bob', 31];
console.log(user2[0]); // 'Bob'
console.log(user2[1]); // 31

/*Элементы кортежа можно изменять:*/
user2[0] = 'eric';
console.log(user2);
user2[0] = 12; // ошибка

/*Можно создавать кортежи только для чтения, элементы которого нельзя изменить. 
Для этого перед типом кортежа указывается ключевое слово readonly:*/ 
let user3: readonly [string, number] = ['john',35];
/*Попытка изменить такой кортеж приведет к ошибке*/
user3[0] = 'eric' // ошибка

/*Кортежи могут иметь необязательные элементы, для которых можно не предоставлять значение. Чтобы указать, 
что элемент является необязательным, после типа элемента ставится вопросительный знак.*/ 
let user4: [string, number, boolean?];
/*Заполним наш кортеж, указав третий элемент */
user4 = ['john', 31, true];
/*А теперь заполним кортеж, опустив третий элемент*/
user4 = ['john', 31];

/*Кортеж, подобно массиву, может быть подвергнут деструктуризации.*/
let user5: [string, number] = ['john', 31]; 
/*Разобьем его части в переменные*/
let [firstName, age] = user5;

/*С помощью оператора rest в кортеже можно определить набор элементов, состоящий из произвольного количества значений, 
имеющих один тип. Создадим кортеж, в к котором первым элементом должна быть строка, 
а затем будет следовать произвольное количество чисел: */ 
let tpl: [string, ...number[]];
/*Заполним кортеж данными*/
tpl = ['str', 1, 2, 3, 4, 5]