/*В TypeScript ключевое слово interface используется для определения контракта (типа) для объектов. 
Оно позволяет определить форму (структуру) объекта, указывая свойства и их типы. 
Вот некоторые особенности и возможности интерфейсов в TypeScript:
1.Определение интерфейса:
Синтаксис для определения интерфейса выглядит следующим образом:*/ 
interface MyInterface {
    prop1: string;
    prop2: number;
    prop3?: boolean; // Опциональное свойство
}  
/*В приведенном примере определен интерфейс MyInterface, который описывает объект с тремя свойствами: 
prop1, prop2 и prop3. Типы свойств указываются после двоеточия.
2.Использование интерфейсов:
Интерфейсы могут использоваться для описания типов объектов и классов:*/
function processObject(obj: MyInterface) {
    // Обработка объекта
}
  
class MyClass implements MyInterface {
    prop1: string;
    prop2: number;
}
/*В примере выше функция processObject принимает объект типа MyInterface в качестве параметра. 
Класс MyClass реализует интерфейс MyInterface и должен иметь все его обязательные свойства.
3.Наследование интерфейсов:
Интерфейсы могут наследовать другие интерфейсы, что позволяет комбинировать свойства из нескольких интерфейсов:*/
interface ParentInterface {
    parentProp: string;
}
  
interface ChildInterface extends ParentInterface {
    childProp: number;
} 
/*В этом примере интерфейс ChildInterface наследует интерфейс ParentInterface и расширяет его, 
добавляя свое собственное свойство childProp.
4.Опциональные свойства:
В интерфейсах можно определить опциональные свойства, указав вопросительный знак после имени свойства:*/ 
interface MyInterface2 {
    prop1: string;
    prop2?: number; // Опциональное свойство
}  
/*Опциональные свойства позволяют объектам соответствовать интерфейсу, даже если эти свойства 
отсутствуют или имеют значение undefined.
5.Readonly свойства:
Интерфейсы могут содержать свойства только для чтения, которые не могут быть изменены после инициализации:*/
interface MyInterface3 {
    readonly prop1: string;
}
/*Readonly свойства могут быть изменены только при их инициализации и после этого стан*/ 